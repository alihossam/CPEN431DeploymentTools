import sys
import argparse
import os
import subprocess
from pssh.clients import ParallelSSHClient
from pssh.utils import load_private_key
from pssh.utils import enable_host_logger

import utils
import fileUpload
import local_config

SERVER_CONFIG_DIR = utils.get_project_path('server_config')

def get_server_config_path(file_rel_from_server_config):
    return f"/home/ubc_cpen431_5/server_config/{file_rel_from_server_config}"


def setup_server(server, key):
    client = ParallelSSHClient([server], user='ubc_cpen431_5', pkey=key, allow_agent=False)
    output = client.run_command('rm -rf ~/server_config')
    utils.print_pssh_output(output)
    output = client.run_command('mkdir ~/server_config')
    utils.print_pssh_output(output)
    for f in os.listdir(SERVER_CONFIG_DIR):
        dest_path = get_server_config_path(f.split('/')[-1])
        local_path = os.path.join(SERVER_CONFIG_DIR, f)
        fileUpload.upload_file_no_pssh([server], key, local_path, dest_path)
        print(f'Wrote file {local_path} to {server}')
    output = client.run_command('bash ~/server_config/setup_new_server.sh')
    utils.print_pssh_output(output)

    with open(utils.get_project_path('all_servers.txt')) as f:
        hostnames = {host.strip() for host in f.readlines()}
        hostnames.add(server)
        hostnames = sorted(hostnames)

    with open(utils.get_project_path('all_servers.txt'), 'w') as f:
        f.write('\n'.join(hostnames) + '\n')

    print(f"Added {server} to the fleet. Don't forget to commit autogenerated changes to all_servers.txt.")


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Start/Stop server in multiple nodes.')
    parser.add_argument('server', type=str, help='server hostname')
    args = parser.parse_args()
    enable_host_logger()

    server = args.server.strip()
    key = local_config.get_planetlab_key()
    setup_server(server, key)
